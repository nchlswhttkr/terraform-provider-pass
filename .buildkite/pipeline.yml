steps:
  - label: ":golang: Check code formatting"
    command:
      - gofmt -l .
      - test -z $(gofmt -l .)
    plugins:
      - docker-compose#v3.10.0:
          run: ci
          config: .buildkite/docker-compose.yml

  - wait

  - group: ":golang: Build binaries"
    key: build
    steps:
      - label: ":golang: Build {{matrix.os}} {{matrix.arch}} binary"
        command:
          - make build
          - mv terraform-provider-pass terraform-provider-pass_{{matrix.os}}_{{matrix.arch}}
        env:
          GOOS: "{{matrix.os}}"
          GOARCH: "{{matrix.arch}}"
        artifact_paths:
          - terraform-provider-pass*
        plugins:
          - docker-compose#v3.10.0:
              run: ci
              config: .buildkite/docker-compose.yml
              env:
                - GOOS
                - GOARCH
        matrix:
          setup:
            os:
              - darwin
              - linux
            arch:
              - amd64
              - arm64

  - label: ":terraform: Generate plugin documentation"
    command: make docs
    artifact_paths:
      - docs/**/*
    plugins:
      - docker-compose#v3.10.0:
          run: ci
          config: .buildkite/docker-compose.yml

  - label: ":github: Bundle binary artifacts and create GitHub release"
    key: create-release
    depends_on: build
    command: .buildkite/create-release.sh
    if: build.env("BUILDKITE_TAG") =~ /^v\d/
    env:
      VAULT_ROLE_ID: 703f9e62-1225-507b-ab21-9b762f8db482
    artifact_paths:
      - release.json

  - label: ":github: Sign and publish release"
    key: sign-release
    depends_on: create-release
    command: .buildkite/sign-release.sh
    if: build.env("BUILDKITE_TAG") =~ /^v\d/
    agents:
      queue: nchlswhttkr
